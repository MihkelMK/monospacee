/* Write your global styles here, in SCSS syntax. Variables and mixins from the src/variables.scss file are available here without importing */
@use './variables.scss' as *;
@use '@picocss/pico/scss/pico' with (
	$css-var-prefix: '--',
	$modules: (
		'themes/default': false,
		'content/code': false,
		'forms/input-color': false,
		'forms/input-date': false,
		'forms/input-file': false,
		'forms/input-range': false,
		'forms/input-search': false
	)
);
@use '$lib/styles/themes/monospacee.scss';

body {
	min-height: 100vh;
	min-height: 100dvh;
	margin: 0;
}

.hidden-visually {
	clip: rect(0 0 0 0);
	border: 0;
	height: 1px;
	margin: -1px;
	overflow: hidden;
	padding: 0;
	position: absolute;
	width: 1px;
}

img.better-blur::after {
	content: '';
	position: absolute;
	inset: 0;
	backdrop-filter: blur(30px);
	pointer-events: none;
}

.sr-only {
	clip: rect(0, 0, 0, 0);
	white-space: nowrap;
	border-width: 0;
	width: 1px;
	height: 1px;
	margin: -1px;
	padding: 0;
	position: absolute;
	overflow: hidden;
}

nav.tags {
	ul {
		flex-wrap: wrap;
		li {
			vertical-align: middle;
			font-family: var(--font-accent);
			padding: calc(var(--nav-element-spacing-vertical) * 0.1)
				calc(var(--nav-element-spacing-horizontal) * 1.25);
			--color: var(--muted-color);
		}
	}
}

.feed article.post {
	max-width: 45rem;

	hgroup {
		margin-bottom: 0;
	}

	& p {
		margin-bottom: 0;
	}
}

article.post {
	margin-inline: auto;
	max-width: min(100%, 65rem);
	--accent-color: var(--contrast);
	--accent-hover: var(--color);
	--accent-hover-underline: var(--color);
	--accent-focus: var(--muted-color);
	--accent-glow: var(--contrast-glow);
	--accent-glow-sm: var(--contrast-glow-sm);

	--accordion-active-summary-color: var(--accent-hover);
	--accordion-open-summary-color: color-mix(
		in srgb,
		var(--accent-color) 70%,
		rgba(255, 255, 255, 0.8)
	);

	&.primary {
		--accent-color: var(--primary);
		--accent-hover: var(--primary-hover);
		--accent-hover-underline: var(--primary-hover-underline);
		--accent-focus: var(--primary-focus);
		--accent-glow: var(--primary-glow);
		--accent-glow-sm: var(--primary-glow-sm);
	}
	&.secondary {
		--accent-color: var(--secondary);
		--accent-hover: var(--secondary-hover);
		--accent-hover-underline: var(--secondary-hover-underline);
		--accent-focus: var(--secondary-focus);
		--accent-glow: var(--secondary-glow);
		--accent-glow-sm: var(--secondary-glow-sm);
	}
	&.contrast {
		& .toc-level-2 li,
		.toc-level-2 li a {
			--color: color-mix(in srgb, var(--accent-color) 80%, #000);
			--accent-focus: color-mix(in srgb, var(--accent-color) 30%, rgba(155, 155, 155, 0));
			--accent-hover: color-mix(in srgb, var(--accent-color) 90%, rgba(0, 0, 0, 0.8));
		}

		& .toc-level-3 li,
		.toc-level-3 li a {
			--color: color-mix(in srgb, var(--accent-color) 60%, #000);
			--accent-focus: color-mix(in srgb, var(--accent-color) 20%, rgba(0, 0, 0, 0));
			--accent-hover: color-mix(in srgb, var(--accent-color) 40%, rgba(0, 0, 0, 0.9));
		}
	}

	& *.glow {
		--glow-color: var(--accent-glow) !important;

		&-sm {
			--glow-color: var(--accent-glow-sm) !important;
		}
	}

	&.playable {
		& header {
			display: grid;
			grid-template-columns: auto 5rem;
		}
	}

	& p {
		width: min(100% - 3rem, 55ch);

		@media screen and (max-width: 992px) {
			width: 100%;
		}
	}

	& a {
		--color: var(--accent-color);

		&.contrast {
			--accent-color: var(--contrast);
			--accent-hover: var(--color);
			--accent-focus: var(--muted-color);
		}
		&.primary {
			--accent-color: var(--primary);
			--accent-hover: var(--primary-hover);
			--accent-focus: var(--primary-focus);
		}
		&.secondary {
			--accent-color: var(--secondary);
			--accent-hover: var(--secondary-hover);
			--accent-focus: var(--secondary-focus);
		}
		&:is([aria-current], :hover, :active, :focus),
		[role='link']:is([aria-current], :hover, :active, :focus) {
			--color: var(--accent-hover);
			--background-color: var(--accent-focus);
			--underline: var(--accent-hover-underline);
		}
	}

	& :is(button, input[type='submit'], input[type='button'], [role='button']) {
		place-self: center;
		margin: 0;
		padding: 0;

		--icon_size: 2.2rem;

		border-color: transparent;
		background-color: transparent;
		--color: var(--accent-color);

		& iconify-icon {
			line-height: normal;
			font-size: var(--icon_size);
		}

		&:is([aria-current], :hover, :active, :focus) {
			--color: var(--accent-hover);
			--underline: var(--accent-hover-underline);
		}

		&:focus {
			--box-shadow:
				var(--button-hover-box-shadow, 0 0 0 rgba(0, 0, 0, 0)),
				0 0 0 var(--outline-width) var(--accent-hover);
		}
	}

	& main:not(.recorded) nav.toc li.toc-item:last-of-type {
		display: none;
	}

	header {
		& hgroup {
			margin-bottom: var(--typography-spacing-vertical);
			& h3,
			h1 {
				--color: var(--accent-color);
				margin-bottom: calc(var(--typography-spacing-vertical) * 0.15);
			}
		}

		& a {
			margin-bottom: 0;
		}
	}
}

ul:not(.landing) iconify-icon {
	&[icon='mdi:instagram'] {
		color: #e1306c;
	}
	&[icon='mdi:soundcloud'] {
		color: #fe6d35;
	}
	&[icon='mdi:facebook'] {
		color: #2374e1;
	}
	&[icon='mdi:spotify'] {
		color: #1db954;
	}
}
.toc {
	margin-bottom: var(--block-spacing-vertical);
}

.toc li {
	color: var(--color);
	font-weight: bold;

	display: list-item;
	font-family: var(--font-accent);
	padding: calc(var(--nav-element-spacing-vertical) * 0.25)
		calc(var(--nav-element-spacing-horizontal) * 1.25);
}

.toc li::marker {
	color: color-mix(in srgb, var(--color) 70%, rgba(0, 0, 0, 0.4));
	counter-increment: item;
	content: counters(list-item, '_') '_';

	font-weight: normal;
}

.toc a {
	color: var(--color);
	padding-block: calc(var(--nav-link-spacing-vertical) * 0.5);
	padding-inline: 0.5em calc(var(--nav-link-spacing-horizontal) * 0.5);
}

.toc ol {
	counter-reset: list-item;
	list-style-type: none;
	list-style-position: inside;
}

.toc ol ol {
	margin-left: 0.25rem;
}

.toc-level-1 li,
.toc-level-1 li a {
	--color: var(--accent-color);
}

.toc-level-2 li,
.toc-level-2 li a {
	--color: color-mix(in srgb, var(--accent-color) 80%, #fff);
	--accent-focus: color-mix(in srgb, var(--accent-color) 30%, rgba(155, 155, 155, 0));
	--accent-hover: color-mix(in srgb, var(--accent-color) 90%, rgba(255, 255, 255, 0.8));
}

.toc-level-3 li,
.toc-level-3 li a {
	--color: color-mix(in srgb, var(--accent-color) 60%, #fff);
	--accent-focus: color-mix(in srgb, var(--accent-color) 20%, rgba(255, 255, 255, 0));
	--accent-hover: color-mix(in srgb, var(--accent-color) 40%, rgba(255, 255, 255, 0.9));
}
